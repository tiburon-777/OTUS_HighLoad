version: '3'
services:

  mysql_master:
    image: mysql:5.7
    hostname: "mysql_master"
    container_name: mysql_master
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PORT: 3306
      MYSQL_LOWER_CASE_TABLE_NAMES: 0
    volumes:
      - ./mysql/mysql_master.conf:/etc/mysql/conf.d/mysql.conf.cnf
      - /opt/mysql_master:/var/lib/mysql

  mysql_slave1:
    image: mysql:5.7
    hostname: "mysql_slave1"
    container_name: mysql_slave1
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PORT: 3306
      MYSQL_LOWER_CASE_TABLE_NAMES: 0
    depends_on:
      - mysql_master
    volumes:
      - ./mysql/mysql_slave1.conf:/etc/mysql/conf.d/mysql.conf.cnf
      - /opt/mysql_slave1:/var/lib/mysql

  mysql_slave2:
    image: mysql:5.7
    hostname: "mysql_slave2"
    container_name: mysql_slave2
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PORT: 3306
      MYSQL_LOWER_CASE_TABLE_NAMES: 0
    depends_on:
      - mysql_master
    volumes:
      - ./mysql/mysql_slave2.conf:/etc/mysql/conf.d/mysql.conf.cnf
      - /opt/mysql_slave2:/var/lib/mysql

  app:
    build:
      context: ..
      dockerfile: ./cicd/app/Dockerfile
    restart: always
    environment:
      APP_SERVER_ADDRESS: 0.0.0.0
      APP_SERVER_PORT: 8080
      APP_DSN_MASTER: mysql_master
      APP_DSN_PORT: 3306
      APP_DSN_USER: app
      APP_DSN_PASS: app
      APP_DSN_BASE: app
    ports:
      - "8080:8080"

  prometheus:
    image: prom/prometheus:v2.24.1
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    image: prom/alertmanager:v0.21.0
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:v1.1.0
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.38.7
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:7.4.0
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    ports:
      - "3001:3000"

  pushgateway:
    image: prom/pushgateway:v1.4.0
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  caddy:
    image: stefanprodan/caddy
    container_name: caddy
    ports:
      - "3000:3000"
      - "9090:9090"
      - "9093:9093"
      - "9091:9091"
    volumes:
      - ./caddy:/etc/caddy
    environment:
      - ADMIN_USER=${ADMIN_USER:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"


networks:
  monitor-net:
    driver: bridge

volumes:
  prometheus_data: { }
  grafana_data: { }
